---
title: "最近参加的一些面试总结"
layout: post
date: 2018-09-19 16:00
headerImage: false
tag:
- summary
- interview
category: ['blog', '2018']
author: circle
description: 面试总结
---

&emsp;&emsp;8月初离职，然后在家待了一个多月，最近正开始重新找工作，找了将近大半个月，看了下面试过的公司，一共10个左右，还是挺多的。找工作的日子有一种对自己的职业生涯、技术知识积累进行梳理的感觉，自己对自己进行阶段性总结，了解自己的优势，回顾过往做过的事情，看到自己的不足，知道哪些地方需要提高，总的而言，梳理的越清楚，越有利于面试的时候如何针对自己的特点进行发挥。

---
&emsp;&emsp;这次找工作的过程中，最大的收获就是花了一些时间了解 php 的执行原理，难以想象以前一直在写 php，却没有怎么了解过这方面的知识，导致很多地方都是一知半解，知其然不知所以然，不管怎么说弄懂 php 的原理是非常重要而且有必要的。

### php 原理

弄懂 php 的原理首先需要知道 php 的核心架构，简单的说 php 从下到上有4层体系：

* Zend 引擎，将 php 代码翻译成可执行 opcode 的地方，并提供了执行方法，是 php 的核心
* Extensions，通过组件式的方式提供各种基础服务，常用的内置函数(array系列)就是通过 extensions 实现的
* Sapi，服务端应用程序接口，是 php 与外围进行数据交互的地方，可以直观地理解为，服务器与 php 解释器之间的通道
* Application，通常就是写 php 代码的地方，与 sapi 进行各种各样的交互

### php 是如何处理一次请求的

客户端发送一次请求，一般的过程是：浏览器使用 http 协议发送请求给服务器(Apache/Nginx)，服务器判断请求是否是静态资源，如果是静态资源直接将其返回，不需要经过 php 的处理。如果不是静态资源，服务器将请求转发给 php 解析器，一般对应着项目当中的入口文件(public/index.php)，处理过后返回 html 数据给服务器，服务器将其返回给客户端。详细的处理过程如下，这里以 php-fpm 接口程序为例：

* 服务器接到请求，启动 php-fpm 管理器
* php-fpm 管理器启动多个 php-cgi 进程，就是 php 的解析器，维护着一个进程池
* php-cgi 进程解析 php.ini 文件进行初始化，然后处理服务器的请求
* php-cgi 将请求结果以规定的格式返回给服务器，进程关闭连接，告知 php-fpm 请求已完成

在学习的过程中，一般是都是从如何使用开始，当使用达到一定程度，就会开始想要弄明白为什么这样做就会产生这样的结果，也就是开始尝试了解其原理，当弄清楚了所做事情的原理的时候，就能更好地进行优化、提高或者针对性地改进。在弄懂 php 的原理之后，我开始尝试去了解 opcode 的执行，php 的核心数据结构是 hashtable，由于对数据结构不了解，我没有办法进一步了解 opcode 的执行过程，也开始意识到数据结构的重要性。

---

&emsp;&emsp;经过10来次面试之后，一般而言，面试的流程大概是这样样子：
* 一段自我介绍，介绍完了之后面试官对面试者有一个初步的了解
* 进行一些常用技术的提问，比如：cookie、session 区别，缓存 redis/memcached 的使用场景，mysql 中的引擎 InnoDB、MyISAM 的区别等等，这些常用的技术知识点一般需要在面试前梳理清楚，这样才能在面试中顺利描述
* 再一个是细节提问，比如：php 当中 isset、is_empty 函数的区别，js 当中如何判断变量是否是字符串，css 代码实现垂直居中效果等等。这类的话主要是反映了面试者的语言基础，准备这个的话只能是平时多写代码，多研究不同的实现方式之间的异同，多总结了
* 一般面试还会对简历中的工作经历中的项目进行提问，比如：xxx 项目中提到的 xxx，具体描述一下，xxx 项目有什么难点
* 面试官还会针对面试者的个人特点进行提问，比如：了解在业余时间做过的项目、介绍个人的优缺点、谈一下对理想中的工作氛围是怎样的等等
* 提问结束后，面试官一般会询问面试者有没有什么需要了解的地方

---

一些准备面试当中常用到的：

#### Redis
* [Redis 命令参考](http://doc.redisfans.com/index.html)
* [redis 数据类型详解 以及 redis适用场景场合](https://my.oschina.net/ydsakyclguozi/blog/404625)
* [使用 Redis 实现排行榜功能](https://segmentfault.com/a/1190000002694239)

#### csrf_token
* [CSRF Token 的设计是否有其必要性](https://segmentfault.com/q/1010000000713614)

#### 前端
* [你真的了解 gzip 吗？](https://zhuanlan.zhihu.com/p/24764131)

参考链接：

[php 底层的运行机制与原理](https://www.awaimai.com/509.html)
